pipeline {
    agent any
    tools {
        maven 'Maven'
    }

    stages {
        stage('Maven Build') {
            steps {
                echo 'Triggering Maven build...'
                bat "mvn clean package"
            }
        }

        stage('Docker Build') {
            steps {
                echo 'Building Docker image...'
                script {
                    // Specify the Docker daemon's TCP port
                    def dockerHost = 'tcp://192.168.4.114:2375'

                    // Build Docker image
                    sh "docker -H=$dockerHost build -t domdoxe/project ."
                }
            }
        }

        stage('DockerHub Push') {
            steps {
                echo 'Pushing Docker image to DockerHub...'
                script {
                    // Specify the Docker daemon's TCP port
                    def dockerHost = 'tcp://192.168.4.114:2375'

                    // Login to DockerHub
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-pass', passwordVariable: 'password', usernameVariable: 'username')]) {
                        bat "docker -H=${dockerHost} login -u \$(env.username) -p \$(env.password)"
                    }

                    // Push Docker image to DockerHub
                    bat "docker -H=${dockerHost} push domdoxe/finalproj:1.0"
                }
            }
        }

        stage('Docker Deploy') {
            agent {
                label 'AnsibleControlNode'
            }
            steps {
                echo 'Deploying Docker container using Ansible...'
                script {
                    // Specify the Docker daemon's TCP port
                    def dockerHost = 'tcp://192.168.4.114:2375'

                    // Run Ansible playbook to deploy Docker container
                    ansiblePlaybook credentialsId: 'docker-hub-pass', installation: 'ansible', inventory: 'dev.inv', playbook: 'deploy-docker.yml', extras: "-e docker_host=${dockerHost}"
                }
            }
        }
    }
}

